version: '3.7'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
#  # using with reverse proxy https://github.com/tim96/Reverse-proxy
#  # Environment values:
#  # VIRTUAL_HOST=www.example.com,example.com
#  # LETSENCRYPT_HOST=www.example.com,example.com
#  # LETSENCRYPT_EMAIL=info@example.com
  default:
    external:
      name: nginx-proxy

services:
### PHP-FPM ##############################################
  php-fpm-1:
    restart: always
    build:
      context: ./php-fpm
    volumes:
      - ${SYMFONY_APP_PATH}:/srv/app
      - ./logs/symfony:/srv/var/log
    networks:
      - backend

### NGINX ##############################################
  nginx-1:
    restart: always
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    depends_on:
      - php-fpm-1
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    #expose:
    #  - 80
    #  - 443
    volumes:
      - ./logs/nginx/:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      # For symfony 4
      - ${SYMFONY_APP_PATH}/public:/srv/app/public:ro
      # For symfony 3
      # - ${SYMFONY_APP_PATH}/web:/srv/app/web:ro
    ports:
      - ${NGINX_PORT}:80
    networks:
      - backend
      - default

### MySQL ################################################
  db-1:
    restart: always
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
    #  - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    networks:
      - backend
    #ports:
    #  - "3308:3306"

### Redis ################################################
  redis:
    build: ./redis
    #volumes:
    #  - ${DATA_PATH_HOST}/redis:/data
#    ports:
#      - "${REDIS_PORT}:6379"
    networks:
      - backend

### Memcached ############################################
  memcached:
    build: ./memcached
    #volumes:
    #  - ${DATA_PATH_HOST}/memcached:/var/lib/memcached
#    ports:
#      - "${MEMCACHED_HOST_PORT}:11211"
    depends_on:
      - php-fpm-1
    networks:
      - backend

### RabbitMQ ############################################
  rabbitmq:
    restart: always
    build: ./rabbitmq
    volumes:
      - ./logs/rabbitmq:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
#    ports:
#      - "15672:15672"
#      - "5672:5672"
    depends_on:
      - php-fpm-1
    networks:
      - backend
#    healthcheck:
#      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
#      interval: 10s
#      timeout: 10s
#      retries: 5

  ### ElasticSearch ############################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    restart: always
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
#    ports:
#      - "9200:9200"
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elastcisearch.yml

### PostgreSQL ################################################
  postgres-1:
    image: postgres:12.5
    restart: always
    #env_file:
    #  - postgres/database.env # configure postgres
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DB}
    #volumes:
    #  - ./data/postgres:/var/lib/postgresql/data/
    networks:
      - backend
    #ports:
    #  - "5433:5432"

### ClickHouse ################################################
  clickhouse-1:
    image: yandex/clickhouse-server:20.1
    restart: always
    volumes:
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml
    networks:
      - backend
    #ports:
    #  - "8123:8123"


  ### Mongo ################################################
  mongo-1:
    image: mongo:4.4
    restart: always
    networks:
      - backend
    #ports:
    #  - "27017:27017"
